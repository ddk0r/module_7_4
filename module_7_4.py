# Входные данные
team1_num = 5  # Количество участников первой команды
team2_num = 6  # Количество участников второй команды
score_1 = 40   # Количество задач, решённых первой командой
score_2 = 42   # Количество задач, решённых второй командой
team1_time = 1552.512  # Время, за которое первая команда решила задачи (в секундах)
team2_time = 2153.31451  # Время, за которое вторая команда решила задачи (в секундах)
tasks_total = 82  # Общее количество задач, решённых обеими командами
time_avg = 45.2   # Среднее время решения задачи (в секундах)

# Определение результата соревнования
if score_1 > score_2 or (score_1 == score_2 and team1_time > team2_time):
    challenge_result = 'Победа команды Мастера кода!'  # Устанавливаем результат, если первая команда выиграла
elif score_1 < score_2 or (score_1 == score_2 and team1_time < team2_time):
    challenge_result = 'Победа команды Волшебники Данных!'  # Устанавливаем результат, если вторая команда выиграла
else:
    challenge_result = 'Ничья!'  # Устанавливаем результат в случае ничьей

# Форматирование строк с использованием %
# Сценарий 1: количество участников первой команды
output1 = "В команде Мастера кода участников: %d!" % team1_num
# Форматируем строку, вставляя количество участников первой команды

print(output1)  # Выводим результат на экран

# Сценарий 2: количество участников в обеих командах
output2 = "Итого сегодня в командах участников: %d и %d!" % (team1_num, team2_num)
# Форматируем строку, вставляя количество участников обеих команд

print(output2)  # Выводим результат на экран

# Форматирование строк с использованием format()
# Сценарий 3: количество задач решённых командой 2
output3 = "Команда Волшебники данных решила задач: {}!".format(score_2)
# Используем метод format для вставки количества задач, решённых второй командой

print(output3)  # Выводим результат на экран

# Сценарий 4: время за которое команда 2 решила задачи
output4 = "Волшебники данных решили задачи за {:.1f} с!".format(team2_time)
# Используем метод format для вставки времени, затраченного на решение задач второй командой, с одним знаком после запятой

print(output4)  # Выводим результат на экран

# Форматирование строк с использованием f-строк
# Сценарий 5: количество решённых задач по командам
output5 = f"Команды решили {score_1} и {score_2} задач."
# Используем f-строку для вставки количества решённых задач обеими командами

print(output5)  # Выводим результат на экран

# Сценарий 6: исход соревнования
output6 = f"Результат битвы: {challenge_result}"
# Используем f-строку для вставки результата соревнования

print(output6)  # Выводим результат на экран

# Сценарий 7: количество задач и среднее время решения
output7 = f"Сегодня было решено {tasks_total} задач, в среднем по {time_avg} секунды на задачу!."
# Используем f-строку для вставки общего количества задач и среднего времени решения

print(output7)  # Выводим результат на экран